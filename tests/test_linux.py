"""Linux normalization tests."""

import pytest

from os_normalizer import OSData, normalize_os
from tests.case_utils import build_params

LINUX_OSDATA_CASES = [
    (
        "Linux host 5.15.0-122-generic x86_64",
        {"os_release": 'NAME="Ubuntu"\nID=ubuntu\nVERSION_ID="22.04.4"\nVERSION_CODENAME=jammy'},
        OSData(
            family="linux",
            vendor="Canonical",
            product="Ubuntu",
            codename="Jammy",
            version_major=22,
            version_minor=4,
            version_patch=4,
            kernel_name="linux",
            kernel_version="5.15.0-122-generic",
            arch="x86_64",
            distro="ubuntu",
            pretty_name="Ubuntu",
            precision="patch",
            confidence=0.8,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:canonical:ubuntu_linux:22.04:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux host 5.10.0-30-amd64",
        {"os_release": 'NAME="Debian GNU/Linux"\nID=debian\nVERSION_ID="12"\nVERSION_CODENAME=bookworm'},
        OSData(
            family="linux",
            vendor="Debian",
            product="Debian GNU/Linux",
            codename="Bookworm",
            version_major=12,
            kernel_name="linux",
            kernel_version="5.10.0-30-amd64",
            arch="x86_64",
            distro="debian",
            pretty_name="Debian GNU/Linux",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:debian:debian_linux:12:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux node 6.5.7-arch1-1",
        {"os_release": 'NAME="Arch Linux"\nID=arch\nVERSION_ID="rolling"'},
        OSData(
            family="linux",
            vendor="Arch",
            product="Arch Linux",
            kernel_name="linux",
            kernel_version="6.5.7-arch1-1",
            distro="arch",
            pretty_name="Arch Linux",
            precision="family",
            confidence=0.6,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:arch:arch\\ linux:*:*:*:*:*:*:*:*",
        ),
    ),
    (
        "Linux host 4.18.0-553.8.1.el8_10.x86_64",
        {
            "os_release": 'NAME="Red Hat Enterprise Linux"\n            ID=rhel\n            VERSION_ID="8.10"\n            PRETTY_NAME="Red Hat Enterprise Linux 8.10 (Ootpa)"'
        },
        OSData(
            family="linux",
            vendor="Red Hat",
            product="Red Hat Enterprise Linux",
            codename="Ootpa",
            version_major=8,
            version_minor=10,
            kernel_name="linux",
            kernel_version="4.18.0-553.8.1.el8_10.x86_64",
            arch="x86_64",
            distro="rhel",
            pretty_name="Red Hat Enterprise Linux 8.10 (Ootpa)",
            precision="minor",
            confidence=0.75,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:redhat:enterprise_linux:8:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux host 5.4.0-105-amd64",
        {"os_release": 'NAME="Rocky Linux"\nID=rocky\nVERSION_ID="9.4"\nPRETTY_NAME="Rocky Linux 9.4 (Blue Onyx)"'},
        OSData(
            family="linux",
            vendor="Rocky",
            product="Rocky Linux",
            codename="Blue Onyx",
            version_major=9,
            version_minor=4,
            kernel_name="linux",
            kernel_version="5.4.0-105-amd64",
            arch="x86_64",
            distro="rocky",
            pretty_name="Rocky Linux 9.4 (Blue Onyx)",
            precision="minor",
            confidence=0.75,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:rocky:rocky\\ linux:9.4:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux host 5.15.0-122-generic aarch64",
        {
            "os_release": 'NAME="AlmaLinux"\nID=almalinux\nVERSION_ID="9.4"\nPRETTY_NAME="AlmaLinux 9.4 (Seafoam Ocelot)"'
        },
        OSData(
            family="linux",
            vendor="AlmaLinux",
            product="AlmaLinux",
            codename="Seafoam Ocelot",
            version_major=9,
            version_minor=4,
            kernel_name="linux",
            kernel_version="5.15.0-122-generic",
            arch="arm64",
            distro="almalinux",
            pretty_name="AlmaLinux 9.4 (Seafoam Ocelot)",
            precision="minor",
            confidence=0.75,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:almalinux:almalinux:9.4:*:*:*:*:*:arm64:*",
        ),
    ),
    (
        "Linux host 5.15.0-122-generic arm64",
        {"os_release": 'NAME="Amazon Linux"\nID=amzn\nVERSION_ID="2023"\nPRETTY_NAME="Amazon Linux 2023"'},
        OSData(
            family="linux",
            vendor="Amazon",
            product="Amazon Linux",
            version_major=2023,
            kernel_name="linux",
            kernel_version="5.15.0-122-generic",
            arch="arm64",
            distro="amzn",
            pretty_name="Amazon Linux 2023",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:amazon:amazon_linux:2023:*:*:*:*:*:arm64:*",
        ),
    ),
    (
        "Linux host 3.10.0-862.el7.x86_64",
        {"os_release": 'NAME="CentOS Linux"\nID=centos\nVERSION_ID="7"\nPRETTY_NAME="CentOS Linux 7 (Core)"'},
        OSData(
            family="linux",
            vendor="Red Hat",
            product="CentOS Linux",
            codename="Core",
            version_major=7,
            kernel_name="linux",
            kernel_version="3.10.0-862.el7.x86_64",
            arch="x86_64",
            distro="centos",
            pretty_name="CentOS Linux 7 (Core)",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:red\\ hat:centos\\ linux:7:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux host 5.14.0-70.fc33.x86_64",
        {
            "os_release": 'NAME="Fedora Linux"\nID=fedora\nVERSION_ID="33"\nPRETTY_NAME="Fedora Linux 33 (Workstation Edition)"'
        },
        OSData(
            family="linux",
            vendor="Fedora Project",
            product="Fedora Linux",
            codename="Workstation Edition",
            version_major=33,
            kernel_name="linux",
            kernel_version="5.14.0-70.fc33.x86_64",
            arch="x86_64",
            distro="fedora",
            pretty_name="Fedora Linux 33 (Workstation Edition)",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux host 4.19.0-18-amd64",
        {
            "os_release": 'NAME="Debian GNU/Linux"\nID=debian\nVERSION_ID="10"\nPRETTY_NAME="Debian GNU/Linux 10 (buster)"'
        },
        OSData(
            family="linux",
            vendor="Debian",
            product="Debian GNU/Linux",
            codename="Buster",
            version_major=10,
            kernel_name="linux",
            kernel_version="4.19.0-18-amd64",
            arch="x86_64",
            distro="debian",
            pretty_name="Debian GNU/Linux 10 (buster)",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:debian:debian_linux:10:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux node 6.5.7-arch1-1",
        None,
        OSData(
            family="linux",
            product="Linux",
            kernel_name="linux",
            kernel_version="6.5.7-arch1-1",
            precision="family",
            confidence=0.6,
            evidence={"hit": "linux"},
        ),
    ),
    (
        "Linux host 5.4.0-70-generic",
        {"os_release": {"NAME": "Fedora Linux", "ID": "fedora", "VERSION_ID": "33"}},
        OSData(
            family="linux",
            vendor="Fedora Project",
            product="Fedora Linux",
            version_major=33,
            kernel_name="linux",
            kernel_version="5.4.0-70-generic",
            distro="fedora",
            pretty_name="Fedora Linux",
            precision="major",
            confidence=0.7,
            evidence={"hit": "linux"},
        ),
    ),
    (
        "Linux host 5.15.0-122-generic x86_64",
        {
            "os_release": 'NAME="Ubuntu"\nID=ubuntu\nVERSION_ID="22.04.4"\nVERSION_CODENAME=jammy\nPRETTY_NAME="Ubuntu 22.04.4 LTS"'
        },
        OSData(
            family="linux",
            vendor="Canonical",
            product="Ubuntu",
            codename="Jammy",
            channel="LTS",
            version_major=22,
            version_minor=4,
            version_patch=4,
            kernel_name="linux",
            kernel_version="5.15.0-122-generic",
            arch="x86_64",
            distro="ubuntu",
            pretty_name="Ubuntu 22.04.4 LTS",
            precision="patch",
            confidence=0.8,
            evidence={"hit": "linux"},
        ),
    ),
    # Legacy generator coverage (Linux)
    (
        "Linux node 5.10.0-30-amd64",
        None,
        OSData(
            family="linux",
            product="Linux",
            kernel_name="linux",
            kernel_version="5.10.0-30-amd64",
            arch="x86_64",
            precision="family",
            confidence=0.6,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:linux:linux:*:*:*:*:*:*:x64:*",
        ),
    ),
    (
        "Linux node 4.18.0-553.8.1.el8_10.x86_64",
        None,
        OSData(
            family="linux",
            product="Linux",
            kernel_name="linux",
            kernel_version="4.18.0-553.8.1.el8_10.x86_64",
            arch="x86_64",
            precision="family",
            confidence=0.6,
            evidence={"hit": "linux"},
            os_key="cpe:2.3:o:linux:linux:*:*:*:*:*:*:x64:*",
        ),
    ),
]


@pytest.mark.parametrize(("text", "data", "expected"), build_params("linux", LINUX_OSDATA_CASES))
def test_linux_normalize_os(text: str, data: dict | None, expected: OSData) -> None:
    """Ensure linux inputs normalize into the expected OSData payloads."""
    result = normalize_os(text, data)
    assert result == expected
